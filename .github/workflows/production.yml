name: CI-CD
'on':
  push:
    branches:
      - master
jobs:
  Integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 18.x
    steps:
      - uses: actions/checkout@v3.1.0
     
      - name: 'Use Node.js ${{matrix.node-version }}'
        uses: actions/setup-node@v3
        with:
          node-version: '${{ matrix.node-version }}'

      - name: Install global dependencies 
        run: npm install -g pnpm dotenv-cli prisma
      
      - name: Install dependencies
        run: pnpm i
      
      - name: Build project
        run: pnpm build
      
      - name: Create dotenv file
        run: |
          printf "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}\nPOSTGRES_USER=${{ secrets.POSTGRES_USER }}\nPOSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}\nPOSTGRES_DB=${{ secrets.POSTGRES_DB }}\nDATABASE_URL=${{ secrets.DATABASE_URL }}\n" > .env.test
      
      - name: Run unit tests
        run: 'pnpm test:cov'
                 
      - name: Create docker compose file
        run: |
          cat << EOF > e2e-docker-compose.yml
          version: '3.8'

          services:
            database:
              image: postgres:latest
              container_name: task-management-postgred
              restart: always
              env_file:
                - .env.test
              volumes:
                - database:/data/postgres
              ports:
                - '5433:5432'
          volumes:
            database:
          EOF

      - name: Start PostgreSQL container
        run: docker-compose -f e2e-docker-compose.yml up -d --build
      
      - name: Migrate Prisma Schema
        run: pnpm dotenv -e .env.test -- npx prisma migrate dev
      
      - name: Run e2e tests
        run: 'pnpm test:e2e'

  Deploy:
    needs: Integration
    runs-on: ubuntu-latest

    permissions:
      issues: write

    steps:
      - name: Manual Workflow Approval
        uses: trstringer/manual-approval@v1.9.0
        with:
          approvers: oh-math
          secret: '${{ github.TOKEN }}'
          minimum-approvals: 1

      - name: Render Deploy Action
        uses: sws2apps/render-deployment@v1.4.0
        with:
          serviceId: '${{ secrets.SERVICE_ID }}'
          apiKey: '${{ secrets.API_KEY }}'
