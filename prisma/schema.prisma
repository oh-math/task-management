// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id   String    @id @default(uuid())
  email     String    @unique @db.VarChar(254)
  password  String
  name      String    @db.VarChar(254)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  tasks     Task[]
  projects  Project[]

  @@index([email])
  @@map("user")
}

model Project {
  project_id String   @id @default(uuid())
  name       String   @db.VarChar(254)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  user_id    String
  tasks      Task[]

  @@index([name])
  @@map("project")
}

model Task {
  task_id         String     @id @default(uuid())
  name            String     @db.VarChar(254)
  description     String?
  expiration_date DateTime
  status          Boolean    @default(false)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  user            User?      @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  user_id         String?
  project         Project?   @relation(fields: [project_id], references: [project_id], onDelete: Cascade)
  project_id      String?
  sub_tasks       Sub_Task[]

  @@index([name])
  @@map("task")
}

model Sub_Task {
  sub_task_id     String   @id @default(uuid())
  name            String   @db.VarChar(254)
  description     String?
  expiration_date DateTime
  status          Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  task            Task     @relation(fields: [task_id], references: [task_id], onDelete: Cascade)
  task_id         String

  @@index([name])
  @@map("sub_task")
}
